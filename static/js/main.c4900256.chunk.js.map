{"version":3,"sources":["components/FirebaseConfig.js","components/Config.js","components/SingUpp.js","arrow.svg","components/NewMessage.js","components/Messages.js","components/Menu.js","components/LogOutUser.js","components/RequestNewPassword.js","App.js","index.js"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","auth","firestore","GoogleAuthProvider","EmailAuthProvider","SingUpp","props","useState","email","setEmail","password","setPassword","message","setMessage","className","placeholder","name","type","value","onChange","e","target","onClick","signInWithEmailAndPassword","then","userCredential","setAvatars","authentication","setUserInIfName","catch","error","errorMessage","createUserWithEmailAndPassword","to","style","color","NewMessage","text","setText","sendMessageFromPhone","event","preventDefault","sendMessage","a","uid","currentUser","messagesRef","collection","add","createdAt","FieldValue","serverTimestamp","time","Date","now","window","matchMedia","matches","onSubmit","rows","cols","src","Arrow","alt","onKeyDown","keyCode","ChatMessage","query","useCollectionData","users","messageClass","fontSize","fontWeight","messageUserIndex","map","indexOf","aliasName","sendTime","hours","getHours","minutes","getMinutes","date","getDate","month","getMonth","year","getFullYear","timeSend","Messages","orderBy","idField","messages","dummy","useRef","useEffect","current","scrollIntoView","msg","id","ref","Menu","setName","newUser","setNewUser","includes","console","log","newUserName","isNameOk","allUsers","toLowerCase","lowName","toLocaleLowerCase","nameRef","setAvatarOk","signOut","location","reload","LogOutUser","RequestNewPassword","EmailHasBeenSent","setEmailHasBeenSent","Error","setError","redirect","setRedirect","sendPasswordResetEmail","setTimeout","App","state","authenticated","avatars","avatarOk","bottom","aliasOk","allUsersID","aliasIsOk","setState","componentDidMount","get","querySnapshot","forEach","doc","data","push","onAuthStateChanged","user","onAuthentication","handleScroll","scrollHeight","scrollTop","clientHeight","SingOut","togleInput","exact","path","this","onScroll","avatar","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c4900256.chunk.js","sourcesContent":["import firebase from 'firebase/app'; // doing import firebase from 'firebase' or import * as firebase from firebase is not good practice. \nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { secredCodes } from './Config'\n\n// Initialize Firebase\nconst config = secredCodes;\n\n/* secredCodes has the following data for Firebase authentication:\nconst secredCodes = {\n    apiKey: \"xxxxxxxxxxx\",\n    authDomain: \"xxxxxxxxxxx\",\n    projectId: \"xxxxxxxxxxxx\",\n    storageBucket: \"xxxxxxxxxxxx\",\n    messagingSenderId: \"xxxxxxxxx\",\n    appId: \"xxxxxxxxxxxx\"\n}\n*/\n\nfirebase.initializeApp(config);\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\n\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nconst emailAuthProvider = new firebase.auth.EmailAuthProvider();\n\nexport { auth, firebase, db, googleAuthProvider, emailAuthProvider };\n\n","\nconst secredCodes = {\n    apiKey: \"AIzaSyDS6fe2Sp3IUQiL-VrrRBynE27ljvxzais\",\n    authDomain: \"pihipurjehtija-chat.firebaseapp.com\",\n    projectId: \"pihipurjehtija-chat\",\n    storageBucket: \"pihipurjehtija-chat.appspot.com\",\n    messagingSenderId: \"830653045546\",\n    appId: \"1:830653045546:web:4e3d897f7cfc16ba811c53\"\n}\n\n\nexport { secredCodes };","import './SingUpp.styles.css'\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport 'firebase/auth'\nimport { auth } from './FirebaseConfig';\nimport 'firebase/auth'\n\n\nconst SingUpp = (props) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState('');\n\n\n\n    const createNewAccount = () => {\n        // Create new account with email and password\n        auth.createUserWithEmailAndPassword(email, password)\n            .then((userCredential) => {\n                props.authentication(true)\n                // Signed in \n            })\n            .catch((error) => {\n                let errorMessage = error.message;\n                setMessage(errorMessage)\n            });\n    }\n\n    const signInWithEmail = () => {\n        //  Sign in with email and password\n        auth.signInWithEmailAndPassword(email, password)\n            .then((userCredential) => {\n                props.setAvatars(false)\n                props.authentication(true)\n                props.setUserInIfName()\n\n                // Signed in\n\n            })\n            .catch((error) => {\n                let errorMessage = error.message;\n                setMessage(errorMessage)\n            });\n\n    };\n\n\n\n\n    return (\n        <div>\n\n            <div className=\"container\">\n                <div className=\"login\">\n                    <h1>Kirjaudu</h1>\n                    <p>Täytä alla olevat kohdat luodaksesi uuden tilin tai kirjautuaksesi sisään.</p>\n                    <div>\n                        <input className=\"input-field\" placeholder=\"Sähköposti\" name=\"email\" type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)}></input>\n                    </div>\n                    <br />\n                    <div>\n                        <input placeholder=\"Salasana\" className=\"input-field\" name=\"password\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}></input>\n                    </div>\n                    <br />\n                    <span className=\"button-login\" onClick={signInWithEmail}>Kirjaudu</span>  <span className=\"button-makeAccount\" onClick={createNewAccount}>Luo tili</span>\n                    <br /><br />\n                    <Link to=\"/Request-password\">Unohtuiko salasana?</Link>\n                    <p style={{ color: 'red' }}>{message}</p>\n                </div>\n            </div>\n        </div>\n    );\n\n\n}\n\n\nexport default SingUpp;","export default __webpack_public_path__ + \"static/media/arrow.83f7b593.svg\";","import './NewMessage-styles.css'\nimport React, { useState } from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth'\nimport { auth } from './FirebaseConfig';\n\nimport Arrow from '../arrow.svg';\n\nconst NewMessage = (props) => {\n\n    const [text, setText] = useState('')\n\n\n\n    const enterPressed = (event) => {\n        if (event.keyCode === 13) {\n            sendMessage();\n        }\n    };\n\n    const sendMessageFromPhone = (event) => {\n        // Prevent default form action\n        event.preventDefault();\n        sendMessage()\n\n    };\n\n\n    const sendMessage = async (event) => {\n        // Send text to server\n        if (text === '') {\n            return\n        } else {\n            const { uid } = auth.currentUser;\n            const messagesRef = firebase.firestore().collection('messages');\n\n            await messagesRef.add({\n                text: text,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n                uid,\n                time: Date.now()\n            })\n        }\n\n        // Empty messagebar after submit\n        setText('');\n\n    };\n\n\n    const togleInput = window.matchMedia(\"(max-width: 768px)\")\n\n    if (togleInput.matches) { // if phone or tablet\n        return (\n            <div className=\"container-send-phone\">\n                <form className=\"sendMessage-phone\" onSubmit={sendMessageFromPhone}>\n                    <textarea rows=\"4\" cols=\"30\" type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n                    <div className=\"button-send-mobile\" onClick={sendMessageFromPhone}>\n                        <img src={Arrow} alt=\"Send\" className=\"arrow\" />\n                    </div>\n                </form>\n\n            </div>\n        )\n    } else {\n        return (\n\n            <div className=\"container-send\">\n                <form className=\"sendMessage-form\" onSubmit={sendMessage}>\n                    <textarea rows=\"2\" placeholder=\"Kirjoita jotain...\" className=\"sendMessage-input\" type=\"text\" value={text} onChange={(e) => setText(e.target.value)} onKeyDown={(e) => enterPressed(e)} />\n                </form>\n            </div>\n\n        )\n    }\n\n}\n\n\n\nexport default NewMessage;","import './Messages-style.css';\nimport React, { useEffect, useRef } from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth'\nimport { auth } from './FirebaseConfig';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nconst Messages = (props) => {\n\n    const messagesRef = firebase.firestore().collection('messages');\n    const query = messagesRef.orderBy('createdAt');\n    const [messages] = useCollectionData(query, { idField: 'id' });\n\n\n    // Scroll messagebar to down after receaving or sent message\n    const dummy = useRef();\n\n    useEffect(() => {\n\n        // autoscroll to the bottom if new messages\n        dummy.current.scrollIntoView();\n        //console.log(messages)\n\n    }, [messages])\n\n\n    return (<>\n        <main>\n            {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n            <div ref={dummy} ></div>\n\n        </main >\n\n    </>)\n}\n\n\n\nconst ChatMessage = (props) => {\n    const { text, uid, time } = props.message;\n\n\n    // get all user names and userID's from firebase\n\n    const nameRef = firebase.firestore().collection('userName');\n    const query = nameRef\n    const [userName] = useCollectionData(query);\n    const users = userName\n\n    const aliasName = () => {\n\n        if (users) {\n            // But all user alias in allUsers array\n            const allUsers = users.map(e => e.uid);\n            // Search with messages uid what is index of user alias\n            const messageUserIndex = allUsers.indexOf(uid)\n            // Get the alias\n            const alias = users[messageUserIndex].text\n\n\n            return alias\n\n\n        }\n\n    };\n\n\n    const timeSend = () => {\n        if (users) {\n\n            const seconds = time\n            const sendTime = new Date(seconds)\n            const hours = sendTime.getHours()\n            const minutes = sendTime.getMinutes()\n\n            const date = sendTime.getDate()\n            const month = sendTime.getMonth() + 1\n            const year = sendTime.getFullYear()\n\n            // add 0 in front if minutes is less than 10\n            const addZero = () => {\n\n                if (minutes < 10) {\n                    return '0' + minutes\n                } else {\n                    return minutes\n                }\n            }\n\n            return <div>{date}.{month}.{year} kello: {hours}:{addZero()}</div>\n        }\n    }\n\n\n    const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n    return (\n        <div className={`message${messageClass}`}>\n            <div className={`message-background-${messageClass}`} >\n                <div className=\"message-info\">\n                    <div style={{ color: '#379187', fontSize: '12px', fontWeight: '600' }}>{aliasName()}</div>\n                    <span style={{ color: '#379187', fontSize: '12px', fontWeight: '400' }}>{timeSend()}</span>\n                </div>\n                <div className=\"message-text\">{text}</div>\n\n            </div >\n        </div >\n    )\n}\n\n\n\n\n\nexport default Messages;","import './RequestNewPassword-styles.css';\nimport React, { useState, useEffect } from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth'\nimport { auth } from './FirebaseConfig';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\n\nconst Menu = (props) => {\n\n    const [name, setName] = useState('');\n    const [newUser, setNewUser] = useState(true)\n    const [message, setMessage] = useState('');\n\n    const singOut = () => {\n        // setUserOffline\n        auth.signOut().then(() => {\n            props.authentication(false)\n        });\n\n    };\n\n    const { uid } = auth.currentUser; // user id from firebase\n\n\n    // get all user names and userID from firebase\n    const nameRef = firebase.firestore().collection('userName');\n    const query = nameRef\n    const [userName] = useCollectionData(query);\n    const users = userName\n\n\n    useEffect(() => {\n\n        if (!users) {\n            console.log('Loading...')\n        } else {\n\n            // search if user allready has alias name in firebase\n            const allUsers = users.map(e => e.uid);\n            const userIs = allUsers.includes(uid) // true or false\n\n            if (userIs) {\n                setNewUser(false)\n\n            } else {\n                return\n            }\n        }\n\n\n\n    }, [uid, users])\n\n\n\n\n\n    const newUserName = async (event) => {\n        event.preventDefault()\n\n        const isNameOk = () => {\n            // Check if the name is allready in use\n            const allUsers = users.map(e => e.text.toLowerCase());\n            const lowName = name.toLocaleLowerCase()\n            const nameIsOk = allUsers.includes(lowName) // true if name founds or false if not\n\n            return nameIsOk\n        };\n\n\n\n\n        if (name === '' || !newUser) {\n            return\n        } else if (isNameOk() === true) {\n            setMessage('Nimi on jo käytössä')\n        } else {\n            // get all user names from firebase\n            const nameRef = firebase.firestore().collection('userName');\n\n            // sent new user name to firebase\n            await nameRef.add({\n                text: name,\n                uid\n            })\n\n            // set APP avatarOk state to true\n            props.setAvatarOk(true)\n\n\n        };\n\n\n\n        // Empty namefield after submit\n        setName('');\n    };\n\n    if (newUser) {\n\n        return (\n            <div className=\"container\">\n                <div className=\"box\">\n                    <h2>Melkein valmista!</h2>\n                    <form onSubmit={newUserName}>\n                        <p>Luo vielä käyttäjänimi, joka näkyy muille keskustelijoille.<br /><br /><span style={{ fontWeight: '600' }}>Nimen voi luoda vain kerran,</span><br />eikä sitä voi jälkeenpäin muuttaa.</p>\n\n                        <input className=\"input-field\" placeholder=\"Nimimerkki\" type=\"text\" name=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\n                        <br />\n                        <p style={{ color: 'red' }}>{message}</p>\n\n                        <div className=\"button-send\" onClick={newUserName}>Tallenna nimi</div>\n                        <div className=\"button-out\" onClick={singOut}>Kirjaudu ulos</div>\n                    </form>\n\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container-reloaderButton\">\n                <div className=\"button-send\" onClick={() => window.location.reload()}>Siirry chattiin!</div>\n            </div>)\n    }\n}\n\n\nexport default Menu;","import './LogOutUser-style.css';\nimport React from 'react';\n\nimport 'firebase/auth'\nimport { auth } from './FirebaseConfig';\n\nconst LogOutUser = (props) => {\n\n    // Log user out\n    const singOut = () => {\n        // setUserOffline()\n        auth.signOut().then(() => {\n            props.authentication(false)\n        });\n\n    };\n\n\n    return <div onClick={singOut} className=\"logOut-button\">Kirjaudu ulos</div>\n};\n\n\n\nexport default LogOutUser;","import './RequestNewPassword-styles.css'\n\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport 'firebase/auth'\nimport { auth } from './FirebaseConfig';\n\nconst RequestNewPassword = () => {\n    const [email, setEmail] = useState('');\n    const [EmailHasBeenSent, setEmailHasBeenSent] = useState(false);\n    const [Error, setError] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n\n    const Send = () => {\n        auth.sendPasswordResetEmail(email)\n            .then(() => {\n                setEmailHasBeenSent(true);\n                setTimeout(() => {\n                    setEmailHasBeenSent(false)\n                    setRedirect(true)\n                }, 4000);\n            }).catch(() => {\n                setError(\"Salasanan vaihtaminen ei onnistu.\");\n            });\n    }\n\n    const Text = () => {\n        if (EmailHasBeenSent) {\n            return 'Sähköpostiisi on lähetetty linkki salasanan vaihtamiseksi.'\n        } else {\n            return <Link to=\"/\">Takaisin etusivulle.</Link>\n        }\n\n    }\n\n    return (\n        redirect ? <Redirect to=\"/\" /> :\n            <div className=\"container\">\n                <div className=\"box\">\n                    <h2>Vaihda salasana</h2>\n                    <p>Kirjoita alla olevaan kenttään sähköpostiosoitteesi ja paina lähetä.<br />\n                    Saat hetken kuluttua sähköpostiisi linkin salasanan vaihtamiseksi.</p>\n                    <input className=\"input-field\" placeholder=\"Sähköposti\" name=\"email\" type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)}></input>\n                    <br />\n                    <div className=\"button-send\" onClick={Send}>Lähetä</div>\n                    <br /><br />\n                    <div>{Text()}</div>\n                    <p style={{ color: 'red' }}>{Error}</p>\n                </div>\n            </div>\n    )\n}\n\n\nexport default RequestNewPassword;","import './App-styles.css';\nimport React from 'react';\n\nimport SingUpp from './components/SingUpp';\nimport NewMessage from './components/NewMessage';\nimport Messages from './components/Messages';\nimport Menu from './components/Menu';\nimport LogOutUser from './components/LogOutUser';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/auth'\nimport { auth } from './components/FirebaseConfig';\nimport RequestNewPassword from './components/RequestNewPassword';\n\n\nclass App extends React.Component {\n    state = {\n        authenticated: false,\n        avatars: [],\n        newUser: [],\n        avatarOk: false,\n        bottom: true\n    };\n\n\n\n    aliasOk = async () => {\n        // check if the user has alias name\n\n        const { uid } = auth.currentUser; // user id from firebase\n        const allUsersID = this.state.avatars.map(e => e.uid);\n\n        const aliasIsOk = allUsersID.includes(uid) // true if id found, false if not\n\n        this.setState({ avatarOk: aliasIsOk })\n\n\n    }\n\n\n\n    componentDidMount = () => {\n\n        const nameRef = firebase.firestore().collection('userName');\n        nameRef.get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n\n                const data = doc.data()\n                allUsers.push(data)\n                this.setState({ avatars: allUsers })\n\n                this.aliasOk()\n\n            });\n\n        });\n\n\n        const logBagIn = () => {\n\n            this.onAuthentication(true)\n\n        };\n\n        const logUserOut = () => {\n            this.setState({ authenticated: false })\n        };\n\n        firebase.auth().onAuthStateChanged(function (user) {\n            if (user) {\n                // User is signed in.\n                logBagIn()\n            } else {\n                // No user is signed in.\n                logUserOut()\n            }\n        });\n\n        let allUsers = []\n\n    };\n\n    handleScroll = (e) => {\n        const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\n        if (bottom) {\n            this.setState({ bottom: true })\n\n        } else {\n            this.setState({ bottom: false })\n        }\n    };\n\n\n    setAvatars = (e) => {\n        this.setState({ avatars: e })\n    };\n\n    setNewUser = (e) => {\n        this.setState({ newUser: e })\n    };\n\n\n    onAuthentication = (e) => {\n        this.setState({ authenticated: e })\n    };\n\n    SingOut = () => {\n        auth.signOut().then(() => {\n            this.setState({ authenticated: false })\n        });\n\n    };\n\n    setAvatarOk = (e) => {\n        this.setState({ avatarOk: e })\n    };\n\n\n\n\n\n    togleInput = () => {\n        const togleInput = window.matchMedia(\"(max-width: 768px)\")\n        return togleInput.matches\n    }\n\n\n\n    render() {\n\n        return (\n            <Router>\n                <Route exact path=\"/\">\n                    <div>\n                        {this.state.authenticated ?\n                            <div>\n                                {this.state.avatarOk ?\n                                    <div className=\"app-container\">\n                                        <div className=\"data-container\">\n                                            <div className=\"logOutNow\" >\n                                                <LogOutUser authentication={this.onAuthentication} />\n                                            </div>\n                                        </div>\n                                        <div className=\"data-container\">\n                                            <div className=\"message-container\" onScroll={this.handleScroll}>\n                                                <Messages setAvatars={this.setAvatars} bottom={this.state.bottom} />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"data-container input\">\n                                            <NewMessage authentication={this.onAuthentication} />\n\n                                        </div>\n                                    </div> :\n                                    <div>\n                                        <Menu setNewUser={this.setNewUser} avatar={this.state.avatars} setAvatarOk={this.setAvatarOk} />\n                                    </div>\n                                }\n                            </div> :\n                            <SingUpp authentication={this.onAuthentication} setAvatars={this.setAvatars} setAvatarOk={this.setAvatarOk} />}\n                    </div>\n                </Route>\n                <Route path=\"/Request-password\"><RequestNewPassword /></Route>\n            </Router>\n        )\n    };\n};\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.querySelector('#root'));"],"sourceRoot":""}